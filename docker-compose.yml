version: '3'

services:
  redis:
    image: redis
    restart: on-failure
    environment:
      - REDIS_PASSWORD=${REDIS_PASS}
    volumes:
      - "redis_data:/data"
    command: sh -c "redis-server --requirepass $$REDIS_PASSWORD"
  db:
    image: "postgres:12"
    restart: on-failure
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  api:
    restart: on-failure
    image: server_web
    build: ./TrendTracker/
    command: >
      sh -c "cd /web/ &&
             python manage.py collectstatic --noinput &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver"
    volumes:
      - .:/web
    depends_on:
      - db
      - redis
    env_file:
      - .env
  celery_worker:
    restart: on-failure
    image: server_web
    build: ./TrendTracker/
    command: >
      sh -c "cd /web/ &&
             wait-for api:9001 -t 120 -- celery -A TrendTracker worker -l INFO -B"
    env_file:
      - .env
    volumes:
      - .:/web
    depends_on:
      - db
      - redis
      - api
  frontend:
    image: server_frontend
    build: ./TrendTracker-frontend/
    command: >
      sh -c ""
    volumes:
      - .:/web
    depends_on:
      - api
    env_file:
      - .env
  nginx:
    image: "nginx:latest"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./TrendTracker/staticfiles:/var/www/TrendTracker/static/
    ports:
      - 80:80
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
